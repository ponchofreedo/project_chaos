// bower:scss
// endbower

@import "_meyer_reset";

* {
  box-sizing: border-box;
}

html, body {
  height: 100%;
  height: 100vh;
}

html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  /*
  shamelessly poached from getskeleton.com.
  this allows for 'desired size / 10' sizing in ems and rems. i.e, 1.5rem = 15px.
  */
  font-size: 62.5%;
}

body {
  background: white;
  font-family: $proxima-nova;
  @include color($black, color);
  font-size: 1em;
  font-weight: $regular;
  font-style: default;
  @include respond(all-phones) {
    -webkit-text-size-adjust: none;
    -ms-text-size-adjust: none;
    width: 100%;
    min-width: 0;
  }
  display: flex;
  flex-direction: column
}

@include hide-and-seek;

@include respond(portrait-phones) {
  .go-away-mobile {
    display: none;
  }
}

.main--container {
  float: none;
  margin: 0;
  padding: 0;
  width: 100%;
  @include respond(all-phones) {
    min-width: 0;
    margin-left: 0;
    margin-right: 0;
  }
}

main {
  position: relative;
  overflow: hidden;
  display: block;
}

header,
section {
  position: relative;
  @include clearfix;
}

// next time, handle with a mixin. hongkiat has a good resource for this exact scenario
.slicy {
  width: 100%;
  height: 100%;
  position: relative;
  background: inherit;
  &.slicy {
    &-top::before {
      content: "";
      width: 100vw;
      height: 100%;
      position: absolute;
      background-color: inherit;
      z-index: -1;
      top: 0;
      transform-origin: right top;
      transform: skewY(6deg);
    }
    &-bottom::after {
      width: 100vw;
      min-height: 100%;
      position: absolute;
      background-color: inherit;
      z-index: -1;
      left: 0;
      bottom: 0;
      transform-origin: left bottom;
      transform: skewY(6deg);
    }
  }
}

#about,
#work,
#rambling,
#contact {
  min-height: 64em;
  padding-top: 18em;
  margin-top: 18em;
  padding-bottom: 24em;
  @include respond(all-phones) {
    margin-top: 0;
  }
}
header {
  &.slicy-bottom::after {
    height: 100vh;
  }
}

#opener {
  min-height: 75vh;
  @include respond(all-phones) {
    min-height: 64em;
  }
  @include respond(super-tablet) {
    min-height: 70em;
  }
  div {
    padding-top: 0;
    @include vertical-align(absolute, 40%);
    @include respond(all-phones) {
      @include vertical-align(absolute, 44%);
      padding-right: 3.2em;
    }
  }
  .logo {
    margin-bottom: 6.2em;
    width: 6.4em;
    height: auto;
    @include respond(all-phones) {
      margin-bottom: 3.2em;
      width: 4.8em;
    }
  }
}
#about {
  article {
    h4 {
      margin-top: 2em;
      margin-bottom: 0.5em;
    }
    p {
      font-size: $medium-type;
      &.next {
        margin-top: 1.5em;
      }
    }
  }
}
#work {
  padding-bottom: 48em;
  @media screen and (max-width: $ambiguous-value) {
    padding-bottom: 24em;
  }
  h2 {
    margin-bottom: 0.67em;
  }
  p {
    font-size: $default-font-size;
    margin-bottom: 6.4em;
    @include respond (all-phones) {
      margin-bottom: 3.4em;
    }
  }
  article {
    a {
      display: block;
    }
    h6 {
      margin-bottom: 1.2em;
    }
    h3 {
      margin-bottom: 1em;
    }
    p {
      font-size: $medium-type;
      margin-bottom: 2em;
    }
    @include respond(all-phones) {
      &:last-child {
        margin-top: 12em;
      }
    }
  }
}

#rambling {
  margin-top: 0em;
  z-index: 2;
}

/* setting an icon size baseline */
i {
  font-size: 2.4em;
}

img {
  -ms-interpolation-mode: bicubic;
}

@include color-classes('text', 'color');
@include color-classes('bg', 'background');

/*
// not ready for this yet
svg {
  background: none;
  position: relative;
  height: 100%;
  width: 100%;
}
polygon {
  fill: none;
  stroke-width: 2;
  stroke: lighten($green, 38.4%);
  vector-effect: non-scaling-stroke;
}
.rotate {
  &-0 {
    transform: rotate(0deg);
    transform-origin: 50% 50%;
  }
  &-90 {
    transform: rotate(90deg);
    transform-origin: 50% 50%;
  }
}*/